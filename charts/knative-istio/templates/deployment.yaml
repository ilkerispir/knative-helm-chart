apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knative-istio.fullname" . }}-ingressgateway
  labels:
    app: istio-ingressgateway
    install.operator.istio.io/owning-resource: unknown
    istio: ingressgateway
    istio.io/rev: default
    operator.istio.io/component: IngressGateways
    release: istio
  {{- include "knative-istio.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ingressgateway.replicas }}
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
    {{- include "knative-istio.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: istio-ingressgateway
        chart: gateways
        heritage: Tiller
        install.operator.istio.io/owning-resource: unknown
        istio: ingressgateway
        istio.io/rev: default
        operator.istio.io/component: IngressGateways
        release: istio
        service.istio.io/canonical-name: istio-ingressgateway
        service.istio.io/canonical-revision: latest
        sidecar.istio.io/inject: "false"
      {{- include "knative-istio.selectorLabels" . | nindent 8 }}
      annotations:
        istio.io/rev: default
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
    spec:
      affinity:
        nodeAffinity: {}
      containers:
      - args: {{- toYaml .Values.ingressgateway.istioProxy.args | nindent 8 }}
        env:
        - name: PILOT_CERT_PROVIDER
          value: {{ quote .Values.ingressgateway.istioProxy.env.pilotCertProvider }}
        - name: CA_ADDR
          value: {{ quote .Values.ingressgateway.istioProxy.env.caAddr }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ISTIO_CPU_LIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "0"
              resource: limits.cpu
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: ISTIO_META_WORKLOAD_NAME
          value: {{ quote .Values.ingressgateway.istioProxy.env.istioMetaWorkloadName }}
        - name: ISTIO_META_OWNER
          value: {{ quote .Values.ingressgateway.istioProxy.env.istioMetaOwner }}
        - name: ISTIO_META_MESH_ID
          value: {{ quote .Values.ingressgateway.istioProxy.env.istioMetaMeshId }}
        - name: TRUST_DOMAIN
          value: {{ quote .Values.ingressgateway.istioProxy.env.trustDomain }}
        - name: ISTIO_META_UNPRIVILEGED_POD
          value: {{ quote .Values.ingressgateway.istioProxy.env.istioMetaUnprivilegedPod
            }}
        - name: ISTIO_META_CLUSTER_ID
          value: {{ quote .Values.ingressgateway.istioProxy.env.istioMetaClusterId }}
        - name: ISTIO_META_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.ingressgateway.istioProxy.image.repository }}:{{ .Values.ingressgateway.istioProxy.image.tag
          | default .Chart.AppVersion }}
        name: istio-proxy
        ports:
        - containerPort: 15021
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15021
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources: {{- toYaml .Values.ingressgateway.istioProxy.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.ingressgateway.istioProxy.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /var/run/secrets/workload-spiffe-uds
          name: workload-socket
        - mountPath: /var/run/secrets/credential-uds
          name: credential-socket
        - mountPath: /var/run/secrets/workload-spiffe-credentials
          name: workload-certs
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/istio/config
          name: config-volume
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        - mountPath: /var/run/secrets/tokens
          name: istio-token
          readOnly: true
        - mountPath: /var/lib/istio/data
          name: istio-data
        - mountPath: /etc/istio/pod
          name: podinfo
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          readOnly: true
      securityContext:
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      serviceAccountName: {{ include "knative-istio.fullname" . }}-ingressgateway-service-account
      volumes:
      - emptyDir: {}
        name: workload-socket
      - emptyDir: {}
        name: credential-socket
      - emptyDir: {}
        name: workload-certs
      - configMap:
          name: istio-ca-root-cert
        name: istiod-ca-cert
      - downwardAPI:
          items:
          - fieldRef:
              fieldPath: metadata.labels
            path: labels
          - fieldRef:
              fieldPath: metadata.annotations
            path: annotations
        name: podinfo
      - emptyDir: {}
        name: istio-envoy
      - emptyDir: {}
        name: istio-data
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token
      - configMap:
          name: {{ include "knative-istio.fullname" . }}-istio
          optional: true
        name: config-volume
      - name: ingressgateway-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-certs
      - name: ingressgateway-ca-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-ca-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knative-istio.fullname" . }}-d
  labels:
    app: istiod
    install.operator.istio.io/owning-resource: unknown
    istio: pilot
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istio
  {{- include "knative-istio.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      istio: pilot
    {{- include "knative-istio.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: istiod
        install.operator.istio.io/owning-resource: unknown
        istio: pilot
        istio.io/dataplane-mode: none
        istio.io/rev: default
        operator.istio.io/component: Pilot
        sidecar.istio.io/inject: "false"
      {{- include "knative-istio.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/port: "15014"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args: {{- toYaml .Values.d.discovery.args | nindent 8 }}
        env:
        - name: REVISION
          value: {{ quote .Values.d.discovery.env.revision }}
        - name: PILOT_CERT_PROVIDER
          value: {{ quote .Values.d.discovery.env.pilotCertProvider }}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.serviceAccountName
        - name: KUBECONFIG
          value: {{ quote .Values.d.discovery.env.kubeconfig }}
        - name: PILOT_TRACE_SAMPLING
          value: {{ quote .Values.d.discovery.env.pilotTraceSampling }}
        - name: PILOT_ENABLE_ANALYSIS
          value: {{ quote .Values.d.discovery.env.pilotEnableAnalysis }}
        - name: CLUSTER_ID
          value: {{ quote .Values.d.discovery.env.clusterId }}
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "0"
              resource: limits.memory
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "0"
              resource: limits.cpu
        - name: PLATFORM
          value: {{ quote .Values.d.discovery.env.platform }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.d.discovery.image.repository }}:{{ .Values.d.discovery.image.tag
          | default .Chart.AppVersion }}
        name: discovery
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 15010
          protocol: TCP
        - containerPort: 15017
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 3
          timeoutSeconds: 5
        resources: {{- toYaml .Values.d.discovery.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.d.discovery.containerSecurityContext | nindent
          10 }}
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: istio-token
          readOnly: true
        - mountPath: /var/run/secrets/istio-dns
          name: local-certs
        - mountPath: /etc/cacerts
          name: cacerts
          readOnly: true
        - mountPath: /var/run/secrets/remote
          name: istio-kubeconfig
          readOnly: true
        - mountPath: /var/run/secrets/istiod/tls
          name: istio-csr-dns-cert
          readOnly: true
        - mountPath: /var/run/secrets/istiod/ca
          name: istio-csr-ca-configmap
          readOnly: true
      serviceAccountName: {{ include "knative-istio.fullname" . }}-d
      tolerations:
      - key: cni.istio.io/not-ready
        operator: Exists
      volumes:
      - emptyDir:
          medium: Memory
        name: local-certs
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token
      - name: cacerts
        secret:
          optional: true
          secretName: cacerts
      - name: istio-kubeconfig
        secret:
          optional: true
          secretName: istio-kubeconfig
      - name: istio-csr-dns-cert
        secret:
          optional: true
          secretName: istiod-tls
      - configMap:
          defaultMode: 420
          name: istio-ca-root-cert
          optional: true
        name: istio-csr-ca-configmap